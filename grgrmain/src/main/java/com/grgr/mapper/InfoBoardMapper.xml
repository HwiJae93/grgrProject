<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
작성자 : 김정현 
수정일 - 수정내용
0909 - 사진(파일) 삭제 매퍼 추가
 -->
<mapper namespace="com.grgr.mapper.InfoBoardMapper">


	<!-- 검색 조건문 -->
	<!-- TC:제목+내용, T: 제목, W: 작성자, -->
	<sql id="search">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<choose>
				<when test="searchType == 'TC'.toString()">
					I.info_title like '%'||#{searchKeyword}||'%' OR
					I.info_content like '%'||#{searchKeyword}||'%'
				</when>
				<when test="searchType == 'T'.toString()">
					I.info_title like '%'||#{searchKeyword}||'%'
				</when>
				<when test="searchType == 'W'.toString()">
					U.nickname like '%'||#{searchKeyword}||'%'
				</when>
			</choose>
		</trim>
	</sql>

	<!-- 관리자일 경우 모든 위치의 글을 조회할 수 있는 권한을 주기위한 조건문 
			관리자가 아닐시, 위치 조건을 추가함-->
	<sql id="notAdmin">
		<if test="loginUserStatus!=1">
		I.INFO_LOC = #{infoLoc} AND</if>
	</sql>
	
	<!-- 총게시글 수 -->
	<select id="infoBoardCount" resultType="int">
		SELECT COUNT(*)
		FROM INFO_BOARD I
		JOIN USERINFO U ON I.UNO = U.UNO
		WHERE
		<include refid="search" />
		<include refid="notAdmin"/> I.info_blindstate=1
		<if test="infoKeyword != null and infoKeyword != ''">
			AND I.info_keyword = #{infoKeyword}
		</if>
	</select>

	<!--게시글 입력(삽입) -->
	<insert id="insertInfoBoard">
		<selectKey keyProperty="infoBno" resultType="int"
			order="BEFORE">
			SELECT INFO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO INFO_BOARD
		(INFO_BNO, UNO, INFO_KEYWORD, INFO_TITLE,
		INFO_CONTENT, INFO_LOC, INFO_UPDATE_UNO)
		VALUES (#{infoBno},
		#{uno},#{infoKeyword},#{infoTitle},#{infoContent},#{infoLoc},#{uno})
	</insert>

	<!-- 자신의 게시글 수정 - UNO 빼볼것..-->
	<update id="updateInfoBoard">
		UPDATE INFO_BOARD SET
		INFO_TITLE=#{infoTitle},
		INFO_CONTENT = #{infoContent}, INFO_UPDATE=SYSDATE,
		INFO_UPDATE_UNO=#{uno},
		INFO_KEYWORD=#{infoKeyword}
		WHERE INFO_BNO=#{infoBno} AND UNO=#{uno}
	</update>

	<!-- 자신의 게시글 삭제 - UNO 검증 서비스나 컨트롤러에서 해볼것..-->
	<update id="deleteInfoBoard">
		update info_board set info_blindstate = 3,
		info_update=sysdate, info_update_uno = #{uno}
		where
		info_bno=#{infoBno}
		and uno=#{uno}
	</update>

	<!-- 관리자가 게시물 숨김 - 권한검증 - 컨트롤러 -->
	<update id="blindInfoBoard">
		UPDATE INFO_BOARD SET
		INFO_BLINDSTATE = 2,
		INFO_UPDATE=SYSDATE, INFO_UPDATE_UNO = #{uno}
		WHERE
		INFO_BNO=#{infoBno}
		AND #{userStatus} = 1
		AND INFO_BLINDSTATE = 1
	</update>

	<!-- n번 게시글 -->
	<select id="selectInfoBoard" resultType="InfoBoard">
		SELECT
		I.INFO_BNO, I.UNO,
		I.INFO_KEYWORD, I.INFO_TITLE, I.INFO_CONTENT, I.INFO_LOC,
		I.INFO_VIEW_CNT,
		I.INFO_REPORT_CNT,
		I.INFO_BLINDSTATE, I.INFO_REGDATE,
		I.INFO_UPDATE,
		I.INFO_UPDATE_UNO,
		U.NICKNAME
		FROM
		INFO_BOARD I
		join
		userinfo U on I.UNO = U.UNO
		where
		I.INFO_BNO=#{infoBno}
	</select>

	<!-- 이전 글 번호 찾기 -->
	<select id="selectPrevInfoBno" resultType="int">
		select max(I.INFO_BNO)
		from INFO_BOARD I
		join USERINFO U on I.UNO = U.UNO
		where
		<include refid="search" />
		<include refid="notAdmin"/> I.info_bno  &lt; #{infoBno} and I.info_blindstate = 1
		<if test="infoKeyword != null and infoKeyword != ''">
			and I.info_keyword = #{infoKeyword}
		</if>
	</select>

	<!-- 다음 글 번호 찾기 -->
	<select id="selectNextInfoBno" resultType="int">
		select min(I.INFO_BNO)
		from INFO_BOARD I
		join USERINFO U on I.UNO = U.UNO
		where
		<include refid="search" />
		<include refid="notAdmin"/> I.info_bno &gt; #{infoBno} and I.info_blindstate = 1
		<if test="infoKeyword != null and infoKeyword != ''">
			and I.info_keyword = #{infoKeyword}
		</if>
	</select>



	<!-- 게시글 목록 -->
	<select id="selectInfoBoardList" resultType="InfoBoard">
		SELECT * FROM (
		SELECT ROWNUM NUM, INFO.* FROM (
		SELECT
		I.INFO_BNO,
		I.UNO,
		I.INFO_KEYWORD,
		I.INFO_TITLE, 
		SUBSTR(I.INFO_CONTENT,1,40) AS INFO_CONTENT, 
		I.INFO_LOC,
		I.INFO_VIEW_CNT,
		I.INFO_REPORT_CNT,
		I.INFO_BLINDSTATE, I.INFO_REGDATE,
		I.INFO_UPDATE,
		I.INFO_UPDATE_UNO,
		U.NICKNAME
		FROM
		INFO_BOARD I
		JOIN
		USERINFO U on I.UNO = U.UNO
		WHERE
		<include refid="search" />
		<include refid="notAdmin"/>
		 I.INFO_BLINDSTATE = 1
		<if test="infoKeyword != null and infoKeyword != ''">
			and I.info_keyword = #{infoKeyword}
		</if>
		ORDER BY I.INFO_BNO DESC
		) INFO
		)
		WHERE NUM BETWEEN #{startRow} AND
		#{endRow}
	</select>



	<!-- 좋아요 check => BNO가 하나만 존재해야 하므로 BOARDSEQ를 하나만 써야하지않을까? -->
	<select id="likeCheck" parameterType="map" resultType="int">
		select
		count(*) from like where bno = #{infoBno} and uno = #{uno}
	</select>


	<!-- 조회수 증가 -->
	<update id="increaseInfoViewCnt">
		UPDATE INFO_BOARD
		SET INFO_VIEW_CNT = INFO_VIEW_CNT +	1
		WHERE INFO_BNO = #{infoBno}
	</update>



	<!-- 이미지파일 업로드 : INFO_FILE_UPDATE_UNO 는 로그인 기능 완성시 추가할 것 -->
	<insert id="insertInfoFile">
		INSERT INTO INFO_FILE (INFO_FILE_NO, INFO_BNO,
		INFO_FILE_ORIGIN, INFO_FILE_UPLOAD)
		VALUES
		(INFO_FILE_SEQ.NEXTVAL,#{infoBno}, #{infoFileOrigin},
		#{infoFileUpload})
	</insert>


	<!-- 이미지파일 검색 -->
	<select id="selectInfoFile">
		SELECT INFO_FILE_NO, INFO_BNO, INFO_FILE_ORIGIN,
		INFO_FILE_UPLOAD FROM INFO_FILE WHERE INFO_BNO = #{infoBno}
		ORDER BY INFO_FILE_NO
	</select>
	
	<!-- 이미지파일 삭제 -->
	<!-- 파일 no 정보를 받아와야함 -->
	<delete id="deleteInfoFile">
		DELETE FROM INFO_FILE WHERE INFO_FILE_NO = #{infoFileNo} 
	</delete>



</mapper>
       
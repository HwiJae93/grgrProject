<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grgr.mapper.ProductCommentMapper">
	<!-- n번 게시글의 댓글 수 / 페이징 처리에 필요함 -->
	<select id="productCommentCount" resultType="int">
		SELECT COUNT(*) FROM
		PRODUCT_COMMENT where
		PRODUCT_ID=#{productId}
	</select>


	<!-- 댓글 목록 = 조회 -->
	<select id="selectProductCommentList"
		resultType="ProductComment">
		SELECT * FROM (
		SELECT ROWNUM NUM, PRODUCT.* FROM (
		SELECT
		PC.PRODUCT_COMMENT_NO,
		PC.UNO,
		PC.PRODUCT_ID,
		PC.PRODUCT_COMMENT_CONTENT,
		CASE
		WHEN
		PC.PRODUCT_COMMENT_GROUP = 0 THEN PC.PRODUCT_COMMENT_NO
		ELSE
		PC.PRODUCT_COMMENT_GROUP
		END AS PRODUCT_COMMENT_GROUP,
		PC.PRODUCT_COMMENT_BLINDSTATE,
		PC.PRODUCT_COMMENT_REGDATE,
		PC.PRODUCT_COMMENT_UPDATE,
		U.NICKNAME
		FROM PRODUCT_COMMENT PC
		JOIN
		USERINFO U ON PC.UNO = U.UNO
		WHERE PC.PRODUCT_ID=#{productId}
		ORDER BY
		CASE
		WHEN PC.PRODUCT_COMMENT_GROUP = 0 THEN PC.PRODUCT_COMMENT_NO
		ELSE
		PC.PRODUCT_COMMENT_GROUP
		END,
		PC.PRODUCT_COMMENT_NO
		) PRODUCT
		)
		WHERE NUM
		BETWEEN #{startRow} AND #{endRow}
	</select>

	<!-- 댓글 입력(삽입) : 최상위댓글 -> 자식댓글: 부모댓글의 그룹번호 받아아옴 - null일시, product_comment_no 
		= product_comment_group 으로 설정되도록 -->
	<insert id="insertProductComment">
		INSERT INTO PRODUCT_COMMENT
		(PRODUCT_COMMENT_NO, PRODUCT_ID,
		UNO, PRODUCT_COMMENT_CONTENT, PRODUCT_COMMENT_GROUP,
		PRODUCT_COMMENT_UPDATE_UNO)
		VALUES (PRODUCT_COMMENT_SEQ.NEXTVAL, #{productId},
		#{uno}, #{productCommentContent},
		#{productCommentGroup}, #{uno})
	</insert>

	<!-- 자신의 댓글 수정 들다 loginUno 필요함 -->
	<update id="updateProductComment">
		UPDATE PRODUCT_COMMENT SET
		PRODUCT_COMMENT_CONTENT =
		#{productCommentContent},
		PRODUCT_COMMENT_UPDATE = SYSDATE,
		PRODUCT_COMMENT_UPDATE_UNO=#{uno}
		where PRODUCT_ID=#{productId} and
		UNO=#{uno}
	</update>

	<!-- 자신의 댓글 삭제 -->
	<update id="deleteProductComment">
		update PRODUCT_COMMENT set PRODUCT_COMMENT_BLINDSTATE
		= 3,
		PRODUCT_COMMENT_UPDATE= SYSDATE,
		PRODUCT_COMMENT_UPDATE_UNO =
		#{uno}
		WHERE
		PRODUCT_COMMENT_NO=#{productCommentNo}
		AND UNO = #{uno}
		AND
		PRODUCT_COMMENT_BLINDSTATE = 1
	</update>

	<!-- 관리자가 댓글 숨김 -->
	<update id="blindProductComment">
		UPDATE PRODUCT_COMMENT SET
		PRODUCT_COMMENT_BLINDSTATE
		= 2,
		PRODUCT_COMMENT_UPDATE= SYSDATE,
		PRODUCT_COMMENT_UPDATE_UNO =
		#{uno}
		WHERE
		PRODUCT_COMMENT_NO = #{productCommentNo}
		AND #{userStatus} =
		1
		AND PRODUCT_COMMENT_BLINDSTATE
		= 1
	</update>

</mapper>